version: '3.8'
services:

  postgres:
    image: postgres:13
    container_name: postgresf1
    environment:
      POSTGRES_DB: f1db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"   # Здесь внешний порт 5433
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  driver-service:
    build: ./driver-service
    container_name: driver-service
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/f1db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_started
    restart: always

  team-service:
    build: ./team-service
    container_name: team-service
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/f1db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_started
    restart: always

  race-service:
    build: ./race-service
    container_name: race-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/f1db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
      eureka-server:
        condition: service_started
    restart: always

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      driver-service:
        condition: service_started
      team-service:
        condition: service_started
      race-service:
        condition: service_started
      eureka-server:
        condition: service_started
    restart: always

volumes:
  postgres_data:
